// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2
// Source: user.proto

package userclient

import (
	"context"

	"tiny_service/apps/user/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserLoginRequest  = user.UserLoginRequest
	UserLoginResponse = user.UserLoginResponse
	UserRegRequest    = user.UserRegRequest
	UserRegResponse   = user.UserRegResponse

	User interface {
		Reg(ctx context.Context, in *UserRegRequest, opts ...grpc.CallOption) (*UserRegResponse, error)
		Login(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Reg(ctx context.Context, in *UserRegRequest, opts ...grpc.CallOption) (*UserRegResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Reg(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
